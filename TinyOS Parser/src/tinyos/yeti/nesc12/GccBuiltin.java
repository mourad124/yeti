/*
 * Yeti 2, NesC development in Eclipse.
 * Copyright (C) 2009 ETH Zurich
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Web:  http://tos-ide.ethz.ch
 * Mail: tos-ide@tik.ee.ethz.ch
 */
package tinyos.yeti.nesc12;

import tinyos.yeti.ep.parser.IDeclaration;
import tinyos.yeti.ep.parser.IMacro;
import tinyos.yeti.ep.parser.IDeclaration.Kind;
import tinyos.yeti.ep.parser.macros.BuiltInMacroFunction;
import tinyos.yeti.ep.parser.macros.ConstantMacro;
import tinyos.yeti.nesc12.ep.declarations.FieldDeclaration;
import tinyos.yeti.nesc12.ep.declarations.IgnoreDeclaration;
import tinyos.yeti.nesc12.parser.ast.elements.SimpleName;
import tinyos.yeti.nesc12.parser.ast.elements.Type;

/**
 * A set of declarations, macros etc. which are built into gcc and thus need
 * to be understood by the parser.
 * @author Benjamin Sigg
 */
public class GccBuiltin{
    private static IMacro[] macros = {
        new ConstantMacro( "__STDC__", "1" ),
        new ConstantMacro( "__STDC_VERSION__", "199409L" ),
        new ConstantMacro( "__STRICT_ANSI__", "1" ),
        
        // these two should be handled by the parser, not the preprocessor
        new ConstantMacro( "extension", "" ),
        new ConstantMacro( "__extension__", "" ),        
        
        new ConstantMacro( "NESC", "129" ),
        
        new BuiltInMacroFunction( "__builtin_offsetof", "0" ),
    };
    
    private static IDeclaration[] builtinDeclarations = getDeclarations();
    
    public static void addAllTo( Parser parser ){
        if( macros != null ){
            for( IMacro macro : macros )
                parser.addMacro( macro );
        }
        
        if( builtinDeclarations != null ){
            parser.addDeclarations( builtinDeclarations );
        }
    }
    
    private static IDeclaration[] getDeclarations(){
        /*
         * This list was obtained from
         * 
         * http://gcc.gnu.org/onlinedocs/gcc-4.1.0/gcc/Other-Builtins.html
         */
        return new IDeclaration[]{ 
            getType( "void*", "__builtin_va_list" ),
                   
            // Outside strict ISO mode
            getIgnoreFunction( "__builtin__exit" ),
            getIgnoreFunction( "__builtin_alloca" ),
            getIgnoreFunction( "__builtin_bcmp" ),
            getIgnoreFunction( "__builtin_bzero" ),
            getIgnoreFunction( "__builtin_dcgettext" ),
            getIgnoreFunction( "__builtin_dgettext" ),
            getIgnoreFunction( "__builtin_drem" ),
            getIgnoreFunction( "__builtin_dremf" ),
            getIgnoreFunction( "__builtin_dreml" ),
            getIgnoreFunction( "__builtin_exp10" ),
            getIgnoreFunction( "__builtin_exp10f" ),
            getIgnoreFunction( "__builtin_exp10l" ),
            getIgnoreFunction( "__builtin_ffs" ),
            getIgnoreFunction( "__builtin_ffsl" ),
            getIgnoreFunction( "__builtin_ffsll" ),
            getIgnoreFunction( "__builtin_fprintf_unlocked" ),
            getIgnoreFunction( "__builtin_fputs_unlocked" ),
            getIgnoreFunction( "__builtin_gammaf" ),
            getIgnoreFunction( "__builtin_gammal" ),
            getIgnoreFunction( "__builtin_gamma" ),
            getIgnoreFunction( "__builtin_gettext" ),
            getIgnoreFunction( "__builtin_index" ),
            getIgnoreFunction( "__builtin_isascii" ),
            getIgnoreFunction( "__builtin_j0f" ),
            getIgnoreFunction( "__builtin_j0l" ),
            getIgnoreFunction( "__builtin_j0" ),
            getIgnoreFunction( "__builtin_j1f" ),
            getIgnoreFunction( "__builtin_j1l" ),
            getIgnoreFunction( "__builtin_j1" ),
            getIgnoreFunction( "__builtin_jnf" ),
            getIgnoreFunction( "__builtin_jnl" ),
            getIgnoreFunction( "__builtin_jn" ),
            getIgnoreFunction( "__builtin_mempcpy" ),
            getIgnoreFunction( "__builtin_pow10f" ),
            getIgnoreFunction( "__builtin_pow10l" ),
            getIgnoreFunction( "__builtin_pow10" ),
            getIgnoreFunction( "__builtin_printf_unlocked" ),
            getIgnoreFunction( "__builtin_rindex" ),
            getIgnoreFunction( "__builtin_scalbf" ), 
            getIgnoreFunction( "__builtin_scalbl" ),
            getIgnoreFunction( "__builtin_scalb" ),
            getIgnoreFunction( "__builtin_signbit" ),
            getIgnoreFunction( "__builtin_signbitf" ),
            getIgnoreFunction( "__builtin_signbitl" ),
            getIgnoreFunction( "__builtin_significandf" ),
            getIgnoreFunction( "__builtin_significandl" ),
            getIgnoreFunction( "__builtin_significand" ),
            getIgnoreFunction( "__builtin_sincosf" ),
            getIgnoreFunction( "__builtin_sincosl" ),
            getIgnoreFunction( "__builtin_sincos" ),
            getIgnoreFunction( "__builtin_stpcpy" ),
            getIgnoreFunction( "__builtin_stpncpy" ),
            getIgnoreFunction( "__builtin_strcasecmp" ),
            getIgnoreFunction( "__builtin_strdup" ),
            getIgnoreFunction( "__builtin_strfmon" ),
            getIgnoreFunction( "__builtin_strncasecmp" ),
            getIgnoreFunction( "__builtin_strndup" ),
            getIgnoreFunction( "__builtin_toascii" ),
            getIgnoreFunction( "__builtin_y0f" ),
            getIgnoreFunction( "__builtin_y0l" ),
            getIgnoreFunction( "__builtin_y0" ),
            getIgnoreFunction( "__builtin_y1f" ),
            getIgnoreFunction( "__builtin_y1l" ),
            getIgnoreFunction( "__builtin_y1" ),
            getIgnoreFunction( "__builtin_ynf" ),
            getIgnoreFunction( "__builtin_ynl" ),
            getIgnoreFunction( "__builtin_yn" ),
            
            // ISO C99
            /*
            getIgnoreFunction( "_Exit" ),
            getIgnoreFunction( "acoshf" ),
            getIgnoreFunction( "acoshl" ),
            getIgnoreFunction( "acosh" ),
            getIgnoreFunction( "asinhf" ),
            getIgnoreFunction( "asinhl" ),
            getIgnoreFunction( "asinh" ),
            getIgnoreFunction( "atanhf" ),
            getIgnoreFunction( "atanhl" ),
            getIgnoreFunction( "atanh" ),
            getIgnoreFunction( "cabsf" ),
            getIgnoreFunction( "cabsl" ),
            getIgnoreFunction( "cabs" ),
            getIgnoreFunction( "cacosf" ),
            getIgnoreFunction( "cacoshf" ),
            getIgnoreFunction( "cacoshl" ),
            getIgnoreFunction( "cacosh" ),
            getIgnoreFunction( "cacosl" ),
            getIgnoreFunction( "cacos" ),
            getIgnoreFunction( "cargf" ),
            getIgnoreFunction( "cargl" ),
            getIgnoreFunction( "carg" ),
            getIgnoreFunction( "casinf" ),
            getIgnoreFunction( "casinhf" ),
            getIgnoreFunction( "casinhl" ),
            getIgnoreFunction( "casinh" ),
            getIgnoreFunction( "casinl" ),
            getIgnoreFunction( "casin" ),
            getIgnoreFunction( "catanf" ),
            getIgnoreFunction( "catanhf" ),
            getIgnoreFunction( "catanhl" ),
            getIgnoreFunction( "catanh" ),
            getIgnoreFunction( "catanl" ),
            getIgnoreFunction( "catan" ),
            getIgnoreFunction( "cbrtf" ),
            getIgnoreFunction( "cbrtl" ),
            getIgnoreFunction( "cbrt" ),
            getIgnoreFunction( "ccosf" ),
            getIgnoreFunction( "ccoshf" ),
            getIgnoreFunction( "ccoshl" ),
            getIgnoreFunction( "ccosh" ),
            getIgnoreFunction( "ccosl" ),
            getIgnoreFunction( "ccos" ),
            getIgnoreFunction( "cexpf" ),
            getIgnoreFunction( "cexpl" ),
            getIgnoreFunction( "cexp" ),
            getIgnoreFunction( "cimagf" ),
            getIgnoreFunction( "cimagl" ),
            getIgnoreFunction( "cimag" ),
            getIgnoreFunction( "clogf" ),
            getIgnoreFunction( "clogl" ),
            getIgnoreFunction( "clog" ),
            getIgnoreFunction( "conjf" ),
            getIgnoreFunction( "conjl" ),
            getIgnoreFunction( "conj" ),
            getIgnoreFunction( "copysignf" ),
            getIgnoreFunction( "copysignl" ),
            getIgnoreFunction( "copysign" ),
            getIgnoreFunction( "cpowf" ),
            getIgnoreFunction( "cpowl" ),
            getIgnoreFunction( "cpow" ),
            getIgnoreFunction( "cprojf" ),
            getIgnoreFunction( "cprojl" ),
            getIgnoreFunction( "cproj" ),
            getIgnoreFunction( "crealf" ),
            getIgnoreFunction( "creall" ),
            getIgnoreFunction( "creal" ),
            getIgnoreFunction( "csinf" ),
            getIgnoreFunction( "csinhf" ),
            getIgnoreFunction( "csinhl" ),
            getIgnoreFunction( "csinh" ),
            getIgnoreFunction( "csinl" ),
            getIgnoreFunction( "csin" ),
            getIgnoreFunction( "csqrtf" ),
            getIgnoreFunction( "csqrtl" ),
            getIgnoreFunction( "csqrt" ),
            getIgnoreFunction( "ctanf" ),
            getIgnoreFunction( "ctanhf" ),
            getIgnoreFunction( "ctanhl" ),
            getIgnoreFunction( "ctanh" ),
            getIgnoreFunction( "ctanl" ),
            getIgnoreFunction( "ctan" ),
            getIgnoreFunction( "erfcf" ),
            getIgnoreFunction( "erfcl" ),
            getIgnoreFunction( "erfc" ),
            getIgnoreFunction( "erff" ),
            getIgnoreFunction( "erfl" ),
            getIgnoreFunction( "erf" ),
            getIgnoreFunction( "exp2f" ),
            getIgnoreFunction( "exp2l" ),
            getIgnoreFunction( "exp2" ),
            getIgnoreFunction( "expm1f" ),
            getIgnoreFunction( "expm1l" ),
            getIgnoreFunction( "expm1" ),
            getIgnoreFunction( "fdimf" ),
            getIgnoreFunction( "fdiml" ),
            getIgnoreFunction( "fdim" ),
            getIgnoreFunction( "fmaf" ),
            getIgnoreFunction( "fmal" ),
            getIgnoreFunction( "fmaxf" ),
            getIgnoreFunction( "fmaxl" ),
            getIgnoreFunction( "fmax" ),
            getIgnoreFunction( "fma" ),
            getIgnoreFunction( "fminf" ),
            getIgnoreFunction( "fminl" ),
            getIgnoreFunction( "fmin" ),
            getIgnoreFunction( "hypotf" ),
            getIgnoreFunction( "hypotl" ),
            getIgnoreFunction( "hypot" ),
            getIgnoreFunction( "ilogbf" ),
            getIgnoreFunction( "ilogbl" ),
            getIgnoreFunction( "ilogb" ),
            getIgnoreFunction( "imaxabs" ),
            getIgnoreFunction( "isblank" ),
            getIgnoreFunction( "iswblank" ),
            getIgnoreFunction( "lgammaf" ),
            getIgnoreFunction( "lgammal" ),
            getIgnoreFunction( "lgamma" ),
            getIgnoreFunction( "llabs" ),
            getIgnoreFunction( "llrintf" ),
            getIgnoreFunction( "llrintl" ),
            getIgnoreFunction( "llrint" ),
            getIgnoreFunction( "llroundf" ),
            getIgnoreFunction( "llroundl" ),
            getIgnoreFunction( "llround" ),
            getIgnoreFunction( "log1pf" ),
            getIgnoreFunction( "log1pl" ),
            getIgnoreFunction( "log1p" ),
            getIgnoreFunction( "log2f" ),
            getIgnoreFunction( "log2l" ),
            getIgnoreFunction( "log2" ),
            getIgnoreFunction( "logbf" ),
            getIgnoreFunction( "logbl" ),
            getIgnoreFunction( "logb" ),
            getIgnoreFunction( "lrintf" ),
            getIgnoreFunction( "lrintl" ),
            getIgnoreFunction( "lrint" ),
            getIgnoreFunction( "lroundf" ),
            getIgnoreFunction( "lroundl" ),
            getIgnoreFunction( "lround" ),
            getIgnoreFunction( "nearbyintf" ),
            getIgnoreFunction( "nearbyintl" ),
            getIgnoreFunction( "nearbyint" ),
            getIgnoreFunction( "nextafterf" ),
            getIgnoreFunction( "nextafterl" ),
            getIgnoreFunction( "nextafter" ),
            getIgnoreFunction( "nexttowardf" ),
            getIgnoreFunction( "nexttowardl" ),
            getIgnoreFunction( "nexttoward" ),
            getIgnoreFunction( "remainderf" ),
            getIgnoreFunction( "remainderl" ),
            getIgnoreFunction( "remainder" ),
            getIgnoreFunction( "remquof" ),
            getIgnoreFunction( "remquol" ),
            getIgnoreFunction( "remquo" ),
            getIgnoreFunction( "rintf" ),
            getIgnoreFunction( "rintl" ),
            getIgnoreFunction( "rint" ),
            getIgnoreFunction( "roundf" ),
            getIgnoreFunction( "roundl" ),
            getIgnoreFunction( "round" ),
            getIgnoreFunction( "scalblnf" ),
            getIgnoreFunction( "scalblnl" ),
            getIgnoreFunction( "scalbln" ),
            getIgnoreFunction( "scalbnf" ),
            getIgnoreFunction( "scalbnl" ),
            getIgnoreFunction( "scalbn" ),
            getIgnoreFunction( "snprintf" ),
            getIgnoreFunction( "tgammaf" ),
            getIgnoreFunction( "tgammal" ),
            getIgnoreFunction( "tgamma" ),
            getIgnoreFunction( "truncf" ),
            getIgnoreFunction( "truncl" ),
            getIgnoreFunction( "trunc" ),
            getIgnoreFunction( "vfscanf" ),
            getIgnoreFunction( "vscanf" ),
            getIgnoreFunction( "vsnprintf" ),
            getIgnoreFunction( "vsscanf" ),
            */
            
            // ISO C99
            getIgnoreFunction( "__builtin_acosf" ),
            getIgnoreFunction( "__builtin_acosl" ),
            getIgnoreFunction( "__builtin_asinf" ),
            getIgnoreFunction( "__builtin_asinl" ),
            getIgnoreFunction( "__builtin_atan2f" ),
            getIgnoreFunction( "__builtin_atan2l" ),
            getIgnoreFunction( "__builtin_atanf" ),
            getIgnoreFunction( "__builtin_atanl" ),
            getIgnoreFunction( "__builtin_ceilf" ),
            getIgnoreFunction( "__builtin_ceill" ),
            getIgnoreFunction( "__builtin_cosf" ),
            getIgnoreFunction( "__builtin_coshf" ),
            getIgnoreFunction( "__builtin_coshl" ),
            getIgnoreFunction( "__builtin_cosl" ),
            getIgnoreFunction( "__builtin_expf" ),
            getIgnoreFunction( "__builtin_expl" ),
            getIgnoreFunction( "__builtin_fabsf" ),
            getIgnoreFunction( "__builtin_fabsl" ),
            getIgnoreFunction( "__builtin_floorf" ),
            getIgnoreFunction( "__builtin_floorl" ),
            getIgnoreFunction( "__builtin_fmodf" ),
            getIgnoreFunction( "__builtin_fmodl" ),
            getIgnoreFunction( "__builtin_frexpf" ),
            getIgnoreFunction( "__builtin_frexpl" ),
            getIgnoreFunction( "__builtin_ldexpf" ),
            getIgnoreFunction( "__builtin_ldexpl" ),
            getIgnoreFunction( "__builtin_log10f" ),
            getIgnoreFunction( "__builtin_log10l" ),
            getIgnoreFunction( "__builtin_logf" ),
            getIgnoreFunction( "__builtin_logl" ),
            getIgnoreFunction( "__builtin_modfl" ),
            getIgnoreFunction( "__builtin_modf" ),
            getIgnoreFunction( "__builtin_powf" ),
            getIgnoreFunction( "__builtin_powl" ),
            getIgnoreFunction( "__builtin_sinf" ),
            getIgnoreFunction( "__builtin_sinhf" ),
            getIgnoreFunction( "__builtin_sinhl" ),
            getIgnoreFunction( "__builtin_sinl" ),
            getIgnoreFunction( "__builtin_sqrtf" ),
            getIgnoreFunction( "__builtin_sqrtl" ),
            getIgnoreFunction( "__builtin_tanf" ),
            getIgnoreFunction( "__builtin_tanhf" ),
            getIgnoreFunction( "__builtin_tanhl" ),
            getIgnoreFunction( "__builtin_tanl" ),

            //ISO C90
            getIgnoreFunction( "__builtin_abort" ),
            getIgnoreFunction( "__builtin_abs" ),
            getIgnoreFunction( "__builtin_acos" ),
            getIgnoreFunction( "__builtin_asin" ),
            getIgnoreFunction( "__builtin_atan2" ),
            getIgnoreFunction( "__builtin_atan" ),
            getIgnoreFunction( "__builtin_calloc" ),
            getIgnoreFunction( "__builtin_ceil" ),
            getIgnoreFunction( "__builtin_cosh" ),
            getIgnoreFunction( "__builtin_cos" ),
            getIgnoreFunction( "__builtin_exit" ),
            getIgnoreFunction( "__builtin_exp" ),
            getIgnoreFunction( "__builtin_fabs" ),
            getIgnoreFunction( "__builtin_floor" ),
            getIgnoreFunction( "__builtin_fmod" ),
            getIgnoreFunction( "__builtin_fprintf" ),
            getIgnoreFunction( "__builtin_fputs" ),
            getIgnoreFunction( "__builtin_frexp" ),
            getIgnoreFunction( "__builtin_fscanf" ),
            getIgnoreFunction( "__builtin_isalnum" ),
            getIgnoreFunction( "__builtin_isalpha" ),
            getIgnoreFunction( "__builtin_iscntrl" ),
            getIgnoreFunction( "__builtin_isdigit" ),
            getIgnoreFunction( "__builtin_isgraph" ),
            getIgnoreFunction( "__builtin_islower" ),
            getIgnoreFunction( "__builtin_isprint" ),
            getIgnoreFunction( "__builtin_ispunct" ),
            getIgnoreFunction( "__builtin_isspace" ),
            getIgnoreFunction( "__builtin_isupper" ),
            getIgnoreFunction( "__builtin_isxdigit" ),
            getIgnoreFunction( "__builtin_tolower" ),
            getIgnoreFunction( "__builtin_toupper" ),
            getIgnoreFunction( "__builtin_labs" ),
            getIgnoreFunction( "__builtin_ldexp" ),
            getIgnoreFunction( "__builtin_log10" ),
            getIgnoreFunction( "__builtin_log" ),
            getIgnoreFunction( "__builtin_malloc" ),
            getIgnoreFunction( "__builtin_memcmp" ),
            getIgnoreFunction( "__builtin_memcpy" ),
            getIgnoreFunction( "__builtin_memset" ),
            getIgnoreFunction( "__builtin_modf" ),
            getIgnoreFunction( "__builtin_pow" ),
            getIgnoreFunction( "__builtin_printf" ),
            getIgnoreFunction( "__builtin_putchar" ),
            getIgnoreFunction( "__builtin_puts" ),
            getIgnoreFunction( "__builtin_scanf" ),
            getIgnoreFunction( "__builtin_sinh" ),
            getIgnoreFunction( "__builtin_sin" ),
            getIgnoreFunction( "__builtin_snprintf" ),
            getIgnoreFunction( "__builtin_sprintf" ),
            getIgnoreFunction( "__builtin_sqrt" ),
            getIgnoreFunction( "__builtin_sscanf" ),
            getIgnoreFunction( "__builtin_strcat" ),
            getIgnoreFunction( "__builtin_strchr" ),
            getIgnoreFunction( "__builtin_strcmp" ),
            getIgnoreFunction( "__builtin_strcpy" ),
            getIgnoreFunction( "__builtin_strcspn" ),
            getIgnoreFunction( "__builtin_strlen" ),
            getIgnoreFunction( "__builtin_strncat" ),
            getIgnoreFunction( "__builtin_strncmp" ),
            getIgnoreFunction( "__builtin_strncpy" ),
            getIgnoreFunction( "__builtin_strpbrk" ),
            getIgnoreFunction( "__builtin_strrchr" ),
            getIgnoreFunction( "__builtin_strspn" ),
            getIgnoreFunction( "__builtin_strstr" ),
            getIgnoreFunction( "__builtin_tanh" ),
            getIgnoreFunction( "__builtin_tan" ),
            getIgnoreFunction( "__builtin_vfprintf" ),
            getIgnoreFunction( "__builtin_vprintf" ),
            getIgnoreFunction( "__builtin_vsprintf" ),
            
            // ISO C99
            getIgnoreFunction( "__builtin_isgreater" ),
            getIgnoreFunction( "__builtin_isgreaterequal" ),
            getIgnoreFunction( "__builtin_isless" ),
            getIgnoreFunction( "__builtin_islessequal" ),
            getIgnoreFunction( "__builtin_islessgreater" ),
            getIgnoreFunction( "__builtin_isunordered" ),
            
            getFunction( "int( void*, void* )", "__builtin_types_compatible_p" ),
            getFunction( "void*( void*, void*, void* )", "__builtin_choose_expr" ),
            getFunction( "void*( void* )", "__builtin_constant_p" ),
            getFunction( "long( long,long )", "__builtin_expect" ),
            getFunction( "void( const void*, ... )", "__builtin_prefetch" ),
            getFunction( "double()", "__builtin_huge_val" ),
            getFunction( "float()", "__builtin_huge_valf" ),
            getFunction( "long double()", "__builtin_huge_vall" ),
            getFunction( "double()", "__builtin_inf" ),
            getFunction( "float()", "__builtin_inff" ),
            getFunction( "long double()", "__builtin_infl" ),
            getFunction( "double( const char * )", "__builtin_nan" ),
            getFunction( "float( const char * )", "__builtin_nanf" ),
            getFunction( "long double( const char* )", "__builtin_nanl" ),
            getFunction( "double( const char* )", "__builtin_nans" ),
            getFunction( "float( const char* )", "__builtin_nansf" ),
            getFunction( "long double( const char* )", "__builtin_nansl" ),
            getFunction( "int( unsigned int )", "__builtin_ffs" ),
            getFunction( "int( unsigned int )", "__builtin_clz" ),
            getFunction( "int( unsigned int )", "__builtin_ctz" ),
            getFunction( "int( unsigned int )", "__builtin_popcount" ),
            getFunction( "int( unsigned int )", "__builtin_parity" ),
            getFunction( "int( unsigned long )", "__builtin_ffsl" ),
            getFunction( "int( unsigned long )", "__builtin_clzl" ),
            getFunction( "int( unsigned long )", "__builtin_ctzl" ),
            getFunction( "int( unsigned long )", "__builtin_popcountl" ),
            getFunction( "int( unsigned long )", "__builtin_parityl" ),
            getFunction( "int( unsigned long long )", "__builtin_ffsll" ),
            getFunction( "int( unsigned long long )", "__builtin_clzll" ),
            getFunction( "int( unsigned long long )", "__builtin_ctzll" ),
            getFunction( "int( unsigned long long )", "__builtin_popcountll" ),
            getFunction( "int( unsigned long long )", "__builtin_parityll" ),
            getFunction( "double( double, int )", "__builtin_powi" ),
            getFunction( "float( float, int )", "__builtin_powif" ),
            getFunction( "long double( long double, int )", "__builtin_powil" ),
        };
    }
    
    private static IDeclaration getType( String type, String name ){
        return Parser.parseType( type, name, null );
    }
    
    private static IDeclaration getFunction( String type, String name ){
        Type result = Parser.parseType( type, null );
        if( result == null )
            return null;
        
        return new FieldDeclaration( Kind.FUNCTION, null, result, new SimpleName( null, name ), null, null, null, null, null );
    }
    
    private static IDeclaration getIgnoreFunction( String name ){
        return new IgnoreDeclaration( Kind.FUNCTION, name, name, null, null, null );
    }
}
